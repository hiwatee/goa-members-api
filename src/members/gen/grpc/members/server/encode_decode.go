// Code generated by goa v3.2.5, DO NOT EDIT.
//
// members gRPC server encoders and decoders
//
// Command:
// $ goa gen members/design

package server

import (
	"context"
	memberspb "members/gen/grpc/members/pb"
	members "members/gen/members"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeAddResponse encodes responses from the "members" service "add"
// endpoint.
func EncodeAddResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	result, ok := v.(int)
	if !ok {
		return nil, goagrpc.ErrInvalidType("members", "add", "int", v)
	}
	resp := NewAddResponse(result)
	return resp, nil
}

// DecodeAddRequest decodes requests sent to "members" service "add" endpoint.
func DecodeAddRequest(ctx context.Context, v interface{}, md metadata.MD) (interface{}, error) {
	var (
		message *memberspb.AddRequest
		ok      bool
	)
	{
		if message, ok = v.(*memberspb.AddRequest); !ok {
			return nil, goagrpc.ErrInvalidType("members", "add", "*memberspb.AddRequest", v)
		}
	}
	var payload *members.AddPayload
	{
		payload = NewAddPayload(message)
	}
	return payload, nil
}
