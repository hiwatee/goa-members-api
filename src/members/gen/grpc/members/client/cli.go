// Code generated by goa v3.2.5, DO NOT EDIT.
//
// members gRPC client CLI support package
//
// Command:
// $ goa gen members/design

package client

import (
	"encoding/json"
	"fmt"
	memberspb "members/gen/grpc/members/pb"
	members "members/gen/members"
)

// BuildAddPayload builds the payload for the members add endpoint from CLI
// flags.
func BuildAddPayload(membersAddMessage string) (*members.AddPayload, error) {
	var err error
	var message memberspb.AddRequest
	{
		if membersAddMessage != "" {
			err = json.Unmarshal([]byte(membersAddMessage), &message)
			if err != nil {
				return nil, fmt.Errorf("invalid JSON for message, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"a\": 829472043634568207,\n      \"b\": 584013961157522162\n   }'")
			}
		}
	}
	v := &members.AddPayload{
		A: int(message.A),
		B: int(message.B),
	}

	return v, nil
}
